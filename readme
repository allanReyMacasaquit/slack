**Set up Backend**
(Open terminal inside project)

1. npm install convex
2. npx convex dev

Add a new file ConvexClientProvider.tsx in the app/ folder. Include the "use client"; directive, create a ConvexReactClient and a component that wraps its children in a ConvexProvider.
import { ConvexClientProvider } from '@/components/ConvexClientProvider';

3. npm install @convex-dev/auth @auth/core@0.36.0
4. npx @convex-dev/auth

**define schema**
import { defineSchema } from "convex/server";
import { authTables } from "@convex-dev/auth/server";

const schema = defineSchema({
...authTables,
// Your other tables...
});

export default schema;

5. Wrap your app in ConvexAuthNextjsServerProvider from @convex-dev/auth/nextjs/server:
   import { ConvexAuthNextjsServerProvider } from "@convex-dev/auth/nextjs/server";

6. In your client provider file, replace ConvexProvider from convex/react
   with ConvexAuthNextjsProvider from @convex-dev/auth/nextjs:
   import { ConvexAuthNextjsProvider } from "@convex-dev/auth/nextjs";

7. lastly: add middleware
   import { convexAuthNextjsMiddleware } from "@convex-dev/auth/nextjs/server";

export default convexAuthNextjsMiddleware();

export const config = {
// The following matcher runs middleware on all routes
// except static assets.
matcher: ["/((?!.*\\..*|_next).*)", "/", "/(api|trpc)(.*)"],
};

**Update middleware**

1. import {
   convexAuthNextjsMiddleware,
   createRouteMatcher,
   isAuthenticatedNextjs,
   nextjsMiddlewareRedirect,
   } from '@convex-dev/auth/nextjs/server';

const isPublicPage = createRouteMatcher(['/auth']);

export default convexAuthNextjsMiddleware((request) => {
if (!isPublicPage(request) && !isAuthenticatedNextjs()) {
return nextjsMiddlewareRedirect(request, '/auth');
}
});

export const config = {
// The following matcher runs middleware on all routes
// except static assets.
matcher: ['/((?!.*\\..*|_next).*)', '/', '/(api|trpc)(.*)'],
};

**END Update middleware**

**OAuth**

1. use HTTP Actions URL: https://yourCallbackUrl/api/auth/callback/github

register to github to get Client ID.

**On terminal**

2. npx convex env set AUTH_GITHUB_ID=yourgithubclientid
   npx convex env set AUTH_GITHUB_SECRET=yourgithubsecret

3. Usage:
   import { useAuthActions } from "@convex-dev/auth/react";

export function SignIn() {
const { signIn } = useAuthActions();
return (
<button onClick={() => void signIn("github")}>Sign in with GitHub</button>
);
}
export function SignIn() {
const { signIn } = useAuthActions();
return (
<button onClick={() => void signIn("github")}>Sign in with GitHub</button>
);
}
or
const Home = () => {
const { signOut } = useAuthActions();
return (

   <div>
   Home <Button onClick={() => signOut()}>Logout</Button>
   </div>
   );
   };
